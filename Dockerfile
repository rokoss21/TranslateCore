# üê≥ TranslateCore Docker Container
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ñ—Ñ–ª–∞–π–Ω –∏ –æ–Ω–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥–æ–≤

FROM python:3.11-slim

# –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
LABEL maintainer="TranslateCore Team"
LABEL description="Advanced translation system with offline support and CLI interface"
LABEL version="1.0.0"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    libsndfile1 \
    && rm -rf /var/lib/apt/lists/*

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
RUN useradd -m -u 1000 translator && \
    mkdir -p /app && \
    chown -R translator:translator /app

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORKDIR /app

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ requirements (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞–ø—Ä—è–º—É—é
COPY requirements.txt* ./
RUN if [ -f requirements.txt ]; then pip install --no-cache-dir -r requirements.txt; fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π TranslateCore
RUN pip install --no-cache-dir \
    deep-translator==1.11.4 \
    requests>=2.28.0 \
    argostranslate>=1.8.0 \
    openai>=1.0.0 \
    colorama>=0.4.6 \
    typing-extensions>=4.0.0

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
COPY --chown=translator:translator . .

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
RUN mkdir -p /app/data /app/cache /app/logs && \
    chown -R translator:translator /app/data /app/cache /app/logs

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
RUN chmod +x translate-cli.py scripts/*.sh examples/*.py || true

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è translator
USER translator

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —è–∑—ã–∫–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
RUN cat > /app/auto_download_packages.py << 'EOF'
#!/usr/bin/env python3
import argostranslate.package
import argostranslate.translate
import sys
import os

def ensure_language_package(from_code, to_code):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞—á–∏–≤–∞–µ—Ç —è–∑—ã–∫–æ–≤–æ–π –ø–∞–∫–µ—Ç –µ—Å–ª–∏ –Ω—É–∂–µ–Ω"""
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –ø–∞–∫–µ—Ç–æ–≤
        argostranslate.package.update_package_index()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø–∞–∫–µ—Ç
        installed_packages = argostranslate.package.get_installed_packages()
        is_installed = any(
            p.from_code == from_code and p.to_code == to_code 
            for p in installed_packages
        )
        
        if is_installed:
            return True
            
        # –ò—â–µ–º –ø–∞–∫–µ—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        available_packages = argostranslate.package.get_available_packages()
        package = next(
            (pkg for pkg in available_packages 
             if pkg.from_code == from_code and pkg.to_code == to_code), 
            None
        )
        
        if package:
            print(f'üì¶ Auto-downloading language package: {from_code} ‚Üí {to_code}')
            argostranslate.package.install_from_path(package.download())
            print(f'‚úÖ Package installed successfully: {from_code} ‚Üí {to_code}')
            return True
        else:
            print(f'‚ö†Ô∏è Language package not available: {from_code} ‚Üí {to_code}')
            return False
            
    except Exception as e:
        print(f'‚ùå Error downloading package {from_code}‚Üí{to_code}: {e}')
        return False

if __name__ == '__main__':
    # –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–∞—Ä—ã
    popular_pairs = [
        ('en', 'ru'), ('ru', 'en'),
        ('en', 'es'), ('es', 'en'),  
        ('en', 'fr'), ('fr', 'en'),
        ('en', 'de'), ('de', 'en'),
        ('en', 'zh'), ('zh', 'en'),
        ('en', 'ja'), ('ja', 'en'),
        ('en', 'ko'), ('ko', 'en'),
        ('en', 'it'), ('it', 'en'),
        ('en', 'pt'), ('pt', 'en'),
    ]
    
    print('üåç Pre-installing popular language packages...')
    success_count = 0
    
    for from_lang, to_lang in popular_pairs:
        if ensure_language_package(from_lang, to_lang):
            success_count += 1
    
    print(f'üéâ Installed {success_count}/{len(popular_pairs)} language packages')
    
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã, —Å–∫–∞—á–∏–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–∞—Ä—É
    if len(sys.argv) == 3:
        from_code, to_code = sys.argv[1], sys.argv[2]
        ensure_language_package(from_code, to_code)
EOF

# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
RUN python3 /app/auto_download_packages.py || echo "‚ö†Ô∏è Some language packages installation failed, but container will still work"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª–∏–∞—Å–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
RUN echo 'alias translate-cli="python3 /app/translate-cli.py"' >> ~/.bashrc

# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –±—É–¥—É—â–µ–º)
EXPOSE 8080

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV PYTHONPATH=/app
ENV TRANSLATE_DATA_DIR=/app/data
ENV TRANSLATE_CACHE_DIR=/app/cache
ENV TRANSLATE_LOG_DIR=/app/logs

# Volumes –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
VOLUME ["/app/data", "/app/cache", "/app/logs"]

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞ —Å TranslateCore
ENTRYPOINT ["/bin/bash", "-c"]
CMD ["echo 'üåç Welcome to TranslateCore Docker Container!' && echo 'Usage examples:' && echo '  python3 translate-cli.py \"Hello World!\"' && echo '  python3 translate-cli.py -i' && echo '  python3 translate-cli.py --setup' && echo '' && exec /bin/bash"]

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import sys; sys.path.append('/app/src'); from translatecore import OfflineTranslator; print('‚úÖ Container healthy')" || exit 1
