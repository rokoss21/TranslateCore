#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è LibreTranslate –∏ Google Translate
"""

from enhanced_translator import EnhancedTranslator

def test_simple_translation():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏"""
    
    test_phrases = [
        "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä!",
        "–ö–∞–∫ –¥–µ–ª–∞?", 
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Translate")
    print("-" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Google Translate
    try:
        google_translator = EnhancedTranslator(
            source_lang='russian',
            target_lang='english',
            preferred_services=['google'],
            cache_file='google_test_cache.json'
        )
        
        for phrase in test_phrases:
            result = google_translator.translate(phrase, use_cache=False)
            print(f"'{phrase}' ‚Üí '{result.translated}' ({result.service})")
        
        print(f"‚úÖ Google Translate —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {google_translator.get_stats()}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Translate: {e}")
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LibreTranslate")
    print("-" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º LibreTranslate —Å —Ä–∞–∑–Ω—ã–º–∏ URL
    libre_configs = [
        {'base_url': 'https://libretranslate.de', 'name': 'libretranslate.de'},
        {'base_url': 'https://translate.argosopentech.com', 'name': 'argosopentech.com'},
        {'base_url': 'https://libretranslate.com', 'name': 'libretranslate.com'},
    ]
    
    for config in libre_configs:
        print(f"\nüì° –ü—Ä–æ–±—É–µ–º —Å–µ—Ä–≤–µ—Ä: {config['name']}")
        
        try:
            libre_translator = EnhancedTranslator(
                source_lang='russian',
                target_lang='english',
                preferred_services=['libre'],
                cache_file=f"libre_{config['name']}_cache.json",
                api_keys={'libre_url': config['base_url']}
            )
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
            test_phrase = "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä!"
            result = libre_translator.translate(test_phrase, use_cache=False)
            
            if result.service == 'libre':
                print(f"‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: '{test_phrase}' ‚Üí '{result.translated}'")
                
                # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã
                for phrase in test_phrases[1:]:
                    result = libre_translator.translate(phrase, use_cache=False)
                    print(f"  '{phrase}' ‚Üí '{result.translated}'")
                
                print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {libre_translator.get_stats()}")
                break  # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Ä–∞–±–æ—á–∏–π —Å–µ—Ä–≤–µ—Ä, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
                
            else:
                print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {result.service}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º {config['name']}: {e}")
    
    print("\nüß™ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç")
    print("-" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        combined_translator = EnhancedTranslator(
            source_lang='russian',
            target_lang='english',
            preferred_services=['google', 'libre'],  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Å–Ω–∞—á–∞–ª–∞ Google, –ø–æ—Ç–æ–º LibreTranslate
            cache_file='combined_test_cache.json'
        )
        
        test_phrase = "–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        result = combined_translator.translate(test_phrase, use_cache=False)
        
        print(f"‚úÖ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"  –û—Ä–∏–≥–∏–Ω–∞–ª: '{test_phrase}'")
        print(f"  –ü–µ—Ä–µ–≤–æ–¥: '{result.translated}'")
        print(f"  –°–µ—Ä–≤–∏—Å: {result.service}")
        print(f"  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {combined_translator.get_stats()}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    test_simple_translation()
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
