#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –æ—Ñ—Ñ–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥–∞
"""

from enhanced_translator import EnhancedTranslator
from config_loader import APIConfigLoader, ConfigurationError
import time

def demo_offline_only():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ offline_only"""
    print("üîå –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –ê–í–¢–û–ù–û–ú–ù–û–ì–û –û–§–§–õ–ê–ô–ù –ü–ï–†–ï–í–û–î–ê")
    print("=" * 65)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é offline_only
        loader = APIConfigLoader('translation_api_config.json')
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ 'offline_only':")
        validation = loader.validate_config('offline_only')
        
        if validation['valid']:
            print("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        else:
            print("   ‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏")
            for error in validation['errors']:
                print(f"      ‚Ä¢ {error}")
            return False
        
        for warning in validation['warnings']:
            print(f"   ‚ö†Ô∏è {warning}")
        
        print("\nüöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ—Ñ–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞...")
        
        # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å –æ—Ñ—Ñ–ª–∞–π–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        translator = EnhancedTranslator(
            source_lang='russian',
            target_lang='english',
            config_file='translation_api_config.json',
            service_config_name='offline_only'
        )
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã
        test_phrases = [
            "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!",
            "–ö–∞–∫ –¥–µ–ª–∞?",
            "–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–Ω–æ–º–Ω–æ",
            "–ü–µ—Ä–µ–≤–æ–¥ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞",
            "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö",
            "–û—Ñ—Ñ–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!",
            "–ú—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç—ã –¥–∞–∂–µ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏",
            "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ø–æ–º–æ–≥–∞–µ—Ç –≤ –ø–µ—Ä–µ–≤–æ–¥–µ"
        ]
        
        print(f"\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ñ—Ñ–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥–∞ ({len(test_phrases)} —Ñ—Ä–∞–∑):")
        print("-" * 65)
        
        total_time = 0
        successful_translations = 0
        
        for i, phrase in enumerate(test_phrases, 1):
            print(f"\n{i}. –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: '{phrase}'")
            
            start_time = time.time()
            
            try:
                # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫—ç—à–∞ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏–∑–º–µ—Ä–µ–Ω–∏–π
                result = translator.translate(phrase, use_cache=False)
                
                end_time = time.time()
                translation_time = end_time - start_time
                total_time += translation_time
                
                if hasattr(result, 'success'):
                    # –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç TranslationResult
                    if result.success:
                        print(f"   ‚úÖ –ü–µ—Ä–µ–≤–æ–¥: '{result.translated}'")
                        print(f"   üîß –°–µ—Ä–≤–∏—Å: {result.service}")
                        print(f"   ‚è±Ô∏è –í—Ä–µ–º—è: {translation_time:.2f}—Å")
                        successful_translations += 1
                        
                        if 'offline' in result.service:
                            print("‚ö° ‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–í–¢–û–ù–û–ú–ù–´–ô –ü–ï–†–ï–í–û–î!")
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.error}")
                else:
                    # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç - –µ—Å–ª–∏ –µ—Å—Ç—å translated, –∑–Ω–∞—á–∏—Ç —É—Å–ø–µ—à–Ω–æ
                    if hasattr(result, 'translated') and result.translated:
                        print(f"   ‚úÖ –ü–µ—Ä–µ–≤–æ–¥: '{result.translated}'")
                        print(f"   üîß –°–µ—Ä–≤–∏—Å: {result.service}")
                        print(f"   ‚è±Ô∏è –í—Ä–µ–º—è: {translation_time:.2f}—Å")
                        successful_translations += 1
                        
                        if 'offline' in result.service:
                            print("‚öôÔ∏è ‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–í–¢–û–ù–û–ú–ù–´–ô –ü–ï–†–ï–í–û–î!")
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥")
                    
            except Exception as e:
                print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\n" + "=" * 65)
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–§–§–õ–ê–ô–ù –ü–ï–†–ï–í–û–î–ê")
        print("=" * 65)
        
        stats = translator.get_stats()
        print(f"üìà –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['total_requests']}")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {successful_translations}")
        print(f"üìâ –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {len(test_phrases) - successful_translations}")
        print(f"‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time:.2f}—Å")
        print(f"üöÄ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥: {total_time/len(test_phrases):.2f}—Å")
        print(f"üîß –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: {', '.join(stats['active_services'])}")
        print(f"üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤: {stats['service_usage']}")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—ç—à–µ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
        try:
            cache_stats = translator.get_cache_stats()
            print(f"üíæ –ó–∞–ø–∏—Å–µ–π –≤ –∫—ç—à–µ: {cache_stats['total_entries']}")
            print(f"üíæ –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {cache_stats['cache_size_mb']:.2f} MB")
        except AttributeError:
            print("üíæ –ö—ç—à –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏")
        
        print("\nüéØ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –û–§–§–õ–ê–ô–ù –ü–ï–†–ï–í–û–î–ê:")
        print("  ‚úÖ –ü–æ–ª–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å - –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–∫–∏–¥–∞—é—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ")
        print("  ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞")
        print("  ‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏–º–∏—Ç–æ–≤ API")
        print("  ‚úÖ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞")
        print("  ‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("  ‚Ä¢ –î–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —è–∑—ã–∫–æ–≤—ã–µ –ø–∞—Ä—ã Argos")
        print("  ‚Ä¢ –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é 'development' —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –æ–Ω–ª–∞–π–Ω —Å–µ—Ä–≤–∏—Å–∞–º–∏")
        print("  ‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —è–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏")
        
        return True
        
    except ConfigurationError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def show_available_offline_methods():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ñ—Ñ–ª–∞–π–Ω –ø–µ—Ä–µ–≤–æ–¥–∞"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–´–• –ú–ï–¢–û–î–û–í –û–§–§–õ–ê–ô–ù –ü–ï–†–ï–í–û–î–ê")
    print("=" * 55)
    
    try:
        from offline_translator import OfflineTranslator
        
        translator = OfflineTranslator('russian', 'english')
        
        print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Argos Translate:")
        try:
            import argostranslate
            print("   ‚úÖ Argos Translate —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
            installed = argostranslate.package.get_installed_packages()
            print(f"   üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤: {len(installed)}")
            
            for package in installed:
                print(f"      ‚Ä¢ {package.from_code} ‚Üí {package.to_code}")
                
        except ImportError:
            print("   ‚ùå Argos Translate –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        print("\nüê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ LibreTranslate Docker:")
        try:
            if hasattr(translator, 'is_libretranslate_running') and translator.is_libretranslate_running():
                print("   ‚úÖ LibreTranslate –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω")
            else:
                print("   ‚ùå LibreTranslate –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        except Exception:
            print("   ‚ùå LibreTranslate –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        
        print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ LibreTranslate —Å–µ—Ä–≤–µ—Ä–∞:")
        try:
            import requests
            response = requests.get("http://localhost:5000", timeout=2)
            print("   ‚úÖ LibreTranslate —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        except:
            print("   ‚ùå LibreTranslate —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    show_available_offline_methods()
    
    print("\n" + "=" * 65)
    
    success = demo_offline_only()
    
    print("\n" + "=" * 65)
    if success:
        print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–í–¢–û–ù–û–ú–ù–û–ì–û –û–§–§–õ–ê–ô–ù –ü–ï–†–ï–í–û–î–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("üí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç–µ!")
    else:
        print("‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É Argos Translate –∏–ª–∏ –∑–∞–ø—É—Å–∫ LibreTranslate")
    
    print("=" * 65)
    
    print("\nüìö –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´:")
    print("python3 offline_translator.py --list-languages     # –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏")
    print("python3 offline_translator.py --install-deps       # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    print("python3 config_loader.py --validate offline_only   # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

if __name__ == "__main__":
    main()
